name: Verificar si hay Culto en Vivo

on:
  schedule:
    - cron: '*/15 17-23 * * *'  # Cada 15 minutos de 17 a 23hs
  workflow_dispatch:

jobs:
  check-live:
    runs-on: ubuntu-latest
    steps:
      - name: Instalar dependencias necesarias
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Verificar transmisi√≥n en vivo
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          YOUTUBE_CHANNEL_ID: ${{ secrets.YOUTUBE_CHANNEL_ID }}
          NOTIF_ENDPOINT: ${{ secrets.NOTIF_ENDPOINT }}
          FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
        run: |
          echo "üîç Consultando YouTube Live..."
          RESPONSE=$(curl -s "https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=$YOUTUBE_CHANNEL_ID&eventType=live&type=video&key=$YOUTUBE_API_KEY")
          
          LIVE_VIDEO_ID=$(echo "$RESPONSE" | jq -r '.items[0].id.videoId // empty')

          if [ -z "$LIVE_VIDEO_ID" ]; then
            echo "‚ùå No hay transmisi√≥n en vivo actualmente."
            exit 0
          fi

          echo "üì∫ Video en vivo detectado: $LIVE_VIDEO_ID"

          # Crear archivo JSON con claves para Firebase
          echo "$FIREBASE_SERVICE_ACCOUNT_KEY" > firebase-key.json

          # Verificar √∫ltimo ID guardado en Firestore
          curl -s -X POST https://firestore.googleapis.com/v1/projects/$PROJECT_ID/databases/(default)/documents:runQuery \
            -H "Content-Type: application/json" \
            -d '{
              "structuredQuery": {
                "from": [{"collectionId": "estado"}],
                "limit": 1
              }
            }' \
            -H "Authorization: Bearer $(gcloud auth application-default print-access-token)" > firestore-check.json

          LAST_ID=$(jq -r '.[0].document.fields.liveVideoId.stringValue // empty' firestore-check.json)

          if [ "$LIVE_VIDEO_ID" = "$LAST_ID" ]; then
            echo "‚è© Ya se notific√≥ esta transmisi√≥n. No se env√≠a notificaci√≥n."
            exit 0
          fi

          echo "‚úÖ Nueva transmisi√≥n detectada, enviando notificaci√≥n..."
          curl -s "$NOTIF_ENDPOINT"

          echo "üíæ Guardando nuevo ID de transmisi√≥n en Firestore..."

          curl -X PATCH \
            "https://firestore.googleapis.com/v1/projects/$PROJECT_ID/databases/(default)/documents/estado/liveStream" \
            -H "Authorization: Bearer $(gcloud auth application-default print-access-token)" \
            -H "Content-Type: application/json" \
            -d "{\"fields\": {\"liveVideoId\": {\"stringValue\": \"$LIVE_VIDEO_ID\"}}}"
