name: Verificar si hay Culto en Vivo

on:
  schedule:
    - cron: '*/15 17-23 * * *'  # Cada 15 minutos de 17:00 a 23:00 hora local
  workflow_dispatch:

jobs:
  check-live:
    runs-on: ubuntu-latest
    steps:
      - name: Instalar herramientas
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Verificar transmisi√≥n en vivo y notificar
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          YOUTUBE_API_KEY:        ${{ secrets.YOUTUBE_API_KEY }}
          YOUTUBE_CHANNEL_ID:     ${{ secrets.YOUTUBE_CHANNEL_ID }}
          NOTIF_ENDPOINT:         ${{ secrets.NOTIF_ENDPOINT }}
        run: |
          set -e

          echo "üîç Consultando YouTube Live..."
          RESPONSE=$(curl -s -H "Referer: https://mision-vida-app.web.app/" \
            "https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=$YOUTUBE_CHANNEL_ID&eventType=live&type=video&key=$YOUTUBE_API_KEY")

          # Intentar extraer videoId, si no hay items o error de clave/quota, LIVE_VIDEO_ID se queda vac√≠o
          LIVE_VIDEO_ID=$(echo "$RESPONSE" | jq -r '.items[0].id.videoId // empty')

          if [ -z "$LIVE_VIDEO_ID" ]; then
            echo "‚ùå No hay transmisi√≥n en vivo o ocurri√≥ un error. Terminando sin notificar."
            exit 0
          fi

          echo "üì∫ Transmisi√≥n en vivo detectada: $LIVE_VIDEO_ID"

          echo "$FIREBASE_SERVICE_ACCOUNT" > firebase-key.json
          gcloud auth activate-service-account --key-file=firebase-key.json

          # Leer √∫ltimo ID guardado (si no existe, guardamos un valor vac√≠o)
          LAST_ID=$(
            gcloud firestore documents describe \
              projects/$(gcloud config get-value project)/databases/(default)/documents/liveStatus/lastLive \
              --format="value(fields.videoId.stringValue)" || echo ""
          )

          if [ "$LIVE_VIDEO_ID" = "$LAST_ID" ]; then
            echo "‚è∏ Ya se notific√≥ este ID: $LAST_ID"
            exit 0
          fi

          echo "‚úÖ Nuevo video live, enviando notificaci√≥n..."
          curl -s "$NOTIF_ENDPOINT"

          echo "üíæ Actualizando Firestore con el nuevo ID..."
          if [ -n "$LAST_ID" ]; then
            # Si ya exist√≠a el documento, actualizamos el campo videoId
            gcloud firestore documents update \
              projects/$(gcloud config get-value project)/databases/(default)/documents/liveStatus/lastLive \
              --update-field="videoId=$LIVE_VIDEO_ID"
          else
            # Si no exist√≠a, creamos el documento completo
            gcloud firestore documents create \
              projects/$(gcloud config get-value project)/databases/(default)/documents/liveStatus \
              --document-id="lastLive" \
              --fields="videoId=string:$LIVE_VIDEO_ID"
          fi

          echo "‚úîÔ∏è Proceso completado correctamente."
